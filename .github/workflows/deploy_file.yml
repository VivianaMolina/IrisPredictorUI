# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  build-and-verify:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
      
  # Job para Despliegue Continuo (CD) en GitHub Pages
  deploy:
    # Solo se ejecuta si el job 'build-and-verify' (CI) pasa
    needs: build-and-verify 
    
    # Configuramos los permisos necesarios para escribir en el repositorio de Pages
    permissions:
      contents: read
      pages: write
      id-token: write
      
    environment:
      # Asigna el job al ambiente de 'github-pages'
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Pages
        # Configura las p√°ginas de GitHub
        uses: actions/configure-pages@v5
        
      - name: Prepare Static Artifact
        # Crea la estructura de directorio que GitHub Pages espera.
        # En este caso, copia la plantilla HTML y la carpeta static/ a 'site'.
        run: |
          mkdir site
          cp templates/index.html site/
          cp -r static site/

      - name: Upload artifact
        # Sube el directorio 'site' como el artefacto de despliegue
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'site'

      - name: Deploy to GitHub Pages
        # Activa el despliegue final
        id: deployment
        uses: actions/deploy-pages@v4
        id: deployment
        uses: actions/deploy-pages@v4
