# Name of the workflow displayed in the GitHub 'Actions' tab
name: CI for Flask Iris Classifier

# Events that trigger the workflow
on:
  # Runs on every 'push' to the 'main' branch
  push:
    branches: [ main ]
  # Runs on every 'pull_request' targeting the 'main' branch
  pull_request:
    branches: [ main ]
  # Allows manual execution from the GitHub interface
  workflow_dispatch:

# A job to build and verify the application
jobs:
  build-and-verify:
    # The runner (virtual machine) where the job will execute
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Code
        # Downloads the repository code
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        # Configures the Python environment
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # Ensure this matches your environment

      - name: Install Dependencies & Pytest
        # Installs packages from requirements.txt and the testing framework
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest  # Install pytest for testing
          
      - name: Verify Pre-Trained ML Model Exists
        # Critical step: checks for the trained model file
        run: |
          echo "Verifying core files..."
          # Check for the trained model in the correct path
          if [ ! -f models/model_iris.pkl ]; then 
            echo "Error: models/model_iris.pkl (ML model) is missing! Ensure you run 'python iris.py' and commit the model."
            exit 1
          fi
          # Check for the main Flask script
          if [ ! -f server.py ]; then 
            echo "Error: server.py (Flask app) is missing!"
            exit 1
          fi
